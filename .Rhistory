data_accident = round(runif(100,min(data$Accident),max(data$Accident)))
# AADT coumn increased 10 folds
data_AADT = runif(100, min(data$AADT),max(data$AADT))
cbind(data_accident,data_AADT,columns = c("Accident","AADT"))
# Read excel data
library(readxl)
data = read_excel("C:/Users/RISHAV/Downloads/New Microsoft Excel Worksheet (3).xlsx")
data_filtered = subset(data, select = c("Accident","AADT"))
# accident column increased 10 folds
data_accident = round(runif(100,min(data$Accident),max(data$Accident)))
# AADT coumn increased 10 folds
data_AADT = runif(100, min(data$AADT),max(data$AADT))
syn_data = cbind(data_accident,data_AADT)
data_enlarged = rbind(data,syn_data)
# Read excel data
library(readxl)
data = read_excel("C:/Users/RISHAV/Downloads/New Microsoft Excel Worksheet (3).xlsx")
data_filtered = subset(data, select = c("Accident","AADT"))
# accident column increased 10 folds
data_accident = round(runif(100,min(data$Accident),max(data$Accident)))
# AADT coumn increased 10 folds
data_AADT = runif(100, min(data$AADT),max(data$AADT))
syn_data = as.matrix(cbind(data_accident,data_AADT))
data_enlarged = rbind(data,syn_data)
# Read excel data
library(readxl)
data = read_excel("C:/Users/RISHAV/Downloads/New Microsoft Excel Worksheet (3).xlsx")
data_filtered = subset(data, select = c("Accident","AADT"))
# accident column increased 10 folds
data_accident = round(runif(100,min(data$Accident),max(data$Accident)))
# AADT coumn increased 10 folds
data_AADT = runif(100, min(data$AADT),max(data$AADT))
syn_data = as.matrix(cbind(data_accident,data_AADT))
syn_data
# Read excel data
library(readxl)
data = read_excel("C:/Users/RISHAV/Downloads/New Microsoft Excel Worksheet (3).xlsx")
data_filtered = subset(data, select = c("Accident","AADT"))
# accident column increased 10 folds
Accident = ccident = round(runif(100,min(data$Accident),max(data$Accident)))
# AADT coumn increased 10 folds
AADT = runif(100, min(data$AADT),max(data$AADT))
syn_data = as.matrix(cbind(Accident,AADT))
syn_data
# Read excel data
library(readxl)
data = read_excel("C:/Users/RISHAV/Downloads/New Microsoft Excel Worksheet (3).xlsx")
data_filtered = subset(data, select = c("Accident","AADT"))
# accident column increased 10 folds
Accident = ccident = round(runif(100,min(data$Accident),max(data$Accident)))
# AADT coumn increased 10 folds
AADT = runif(100, min(data$AADT),max(data$AADT))
syn_data = as.matrix(cbind(Accident,AADT))
rbind(data,syn_data)
# Read excel data
library(readxl)
data = read_excel("C:/Users/RISHAV/Downloads/New Microsoft Excel Worksheet (3).xlsx")
data_filtered = subset(data, select = c("Accident","AADT"))
# accident column increased 10 folds
Accident = ccident = round(runif(100,min(data$Accident),max(data$Accident)))
# AADT coumn increased 10 folds
AADT = runif(100, min(data$AADT),max(data$AADT))
syn_data = as.matrix(cbind(Accident,AADT))
rbind(data_filtered,syn_data)
# Read excel data
library(readxl)
data = read_excel("C:/Users/RISHAV/Downloads/New Microsoft Excel Worksheet (3).xlsx")
data_filtered = subset(data, select = c("Accident","AADT"))
# accident column increased 10 folds
Accident = ccident = round(runif(100,min(data$Accident),max(data$Accident)))
# AADT coumn increased 10 folds
AADT = runif(100, min(data$AADT),max(data$AADT))
syn_data = as.matrix(cbind(Accident,AADT))
data_enlarged = rbind(data_filtered,syn_data)
order(data_enlarged)
# Read excel data
library(readxl)
data = read_excel("C:/Users/RISHAV/Downloads/New Microsoft Excel Worksheet (3).xlsx")
data_filtered = subset(data, select = c("Accident","AADT"))
# accident column increased 10 folds
Accident = ccident = round(runif(100,min(data$Accident),max(data$Accident)))
# AADT coumn increased 10 folds
AADT = runif(100, min(data$AADT),max(data$AADT))
syn_data = as.matrix(cbind(Accident,AADT))
data_enlarged = rbind(data_filtered,syn_data)
order(data_enlarged$Accident)
# Read excel data
library(readxl)
data = read_excel("C:/Users/RISHAV/Downloads/New Microsoft Excel Worksheet (3).xlsx")
data_filtered = subset(data, select = c("Accident","AADT"))
# accident column increased 10 folds
Accident = ccident = round(runif(100,min(data$Accident),max(data$Accident)))
# AADT coumn increased 10 folds
AADT = runif(100, min(data$AADT),max(data$AADT))
syn_data = as.matrix(cbind(Accident,AADT))
data_enlarged = rbind(data_filtered,syn_data)
data_enlarged
# Read excel data
library(readxl)
data = read_excel("C:/Users/RISHAV/Downloads/New Microsoft Excel Worksheet (3).xlsx")
data_filtered = subset(data, select = c("Accident","AADT"))
# accident column increased 10 folds
Accident = ccident = round(runif(100,min(data$Accident),max(data$Accident)))
# AADT coumn increased 10 folds
AADT = runif(100, min(data$AADT),max(data$AADT))
syn_data = as.matrix(cbind(Accident,AADT))
data_enlarged = rbind(data_filtered,syn_data)
data_enlarged = data_enlarged[order(data_enlarged$Accident,data_enlarged$AADT)]
# Read excel data
library(readxl)
data = read_excel("C:/Users/RISHAV/Downloads/New Microsoft Excel Worksheet (3).xlsx")
data_filtered = subset(data, select = c("Accident","AADT"))
# accident column increased 10 folds
Accident = ccident = round(runif(100,min(data$Accident),max(data$Accident)))
# AADT coumn increased 10 folds
AADT = runif(100, min(data$AADT),max(data$AADT))
syn_data = as.matrix(cbind(Accident,AADT))
data_enlarged = rbind(data_filtered,syn_data)
data_enlarged = data_enlarged[order(data_enlarged$Accident,data_enlarged$AADT),]
# Read excel data
library(readxl)
data = read_excel("C:/Users/RISHAV/Downloads/New Microsoft Excel Worksheet (3).xlsx")
data_filtered = subset(data, select = c("Accident","AADT"))
# accident column increased 10 folds
Accident = ccident = round(runif(100,min(data$Accident),max(data$Accident)))
# AADT coumn increased 10 folds
AADT = runif(100, min(data$AADT),max(data$AADT))
syn_data = as.matrix(cbind(Accident,AADT))
data_enlarged = rbind(data_filtered,syn_data)
data_enlarged = data_enlarged[order(data_enlarged$Accident,data_enlarged$AADT),]
data_enlarged
# Read excel data
library(readxl)
data = read_excel("C:/Users/RISHAV/Downloads/New Microsoft Excel Worksheet (3).xlsx")
data_filtered = subset(data, select = c("Accident","AADT"))
# accident column increased 10 folds
Accident = round(runif(100,min(data$Accident),max(data$Accident)))
Accident = sort(Accident)
# AADT coumn increased 10 folds
AADT = runif(100, min(data$AADT),max(data$AADT))
AADT = sort(AADT)
syn_data = as.matrix(cbind(Accident,AADT))
data_enlarged = rbind(data_filtered,syn_data)
#data_enlarged = data_enlarged[order(data_enlarged$Accident,data_enlarged$AADT),]
data_enlarged
# Read excel data
library(readxl)
data = read_excel("C:/Users/RISHAV/Downloads/New Microsoft Excel Worksheet (3).xlsx")
data_filtered = subset(data, select = c("Accident","AADT"))
# accident column increased 10 folds
Accident = round(runif(100,min(data$Accident),max(data$Accident)))
Accident = sort(Accident)
# AADT coumn increased 10 folds
AADT = runif(100, min(data$AADT),max(data$AADT))
AADT = sort(AADT)
#synthesized large data
syn_data = as.matrix(cbind(Accident,AADT))
data_enlarged = rbind(data_filtered,syn_data)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
data = read_excel("C:/Users/RISHAV/Downloads/New Microlibrary(readxl)soft Excel Worksheet (3).xlsx")
# Read excel data
library(readxl)
data = read_excel("C:/Users/RISHAV/Downloads/New Microsoft Excel Worksheet (3).xlsx")
# Read excel data
library(readxl)
data = read_excel("C:/Users/RISHAV/Downloads/New Microsoft Excel Worksheet (3).xlsx")
data_filtered = subset(data, select = c("Accident","AADT"))
# accident column increased 10 folds
Accident = round(runif(100,min(data$Accident),max(data$Accident)))
Accident = sort(Accident)
# AADT coumn increased 10 folds
AADT = runif(100, min(data$AADT),max(data$AADT))
AADT = sort(AADT)
#synthesized large data
syn_data = as.matrix(cbind(Accident,AADT))
data_enlarged = rbind(data_filtered,syn_data)
# Read excel data
library(readxl)
data = read_excel("C:/Users/RISHAV/Downloads/New Microsoft Excel Worksheet (3).xlsx")
data_filtered = subset(data, select = c("Accident","AADT"))
# accident column increased 10 folds
Accident = round(runif(100,min(data$Accident),max(data$Accident)))
Accident = sort(Accident)
# AADT coumn increased 10 folds
AADT = runif(100, min(data$AADT),max(data$AADT))
AADT = sort(AADT)
#synthesized large data
syn_data = as.matrix(cbind(Accident,AADT))
data_enlarged = rbind(data_filtered,syn_data)
data_enlarged
bw <- npregbw(formula=Accident~AADT, tol=.1, ftol=.1)
install.packages("np")
library(np)
bw <- npregbw(formula=Accident~AADT, tol=.1, ftol=.1)
library(np)
bw <- npreg(formula=Accident~AADT, regtype = "ll", bwmethod = "cv.aic", gradients = TRUE, data = data_enlarged)
library(np)
bw <- npreg(Accident~AADT, regtype = "ll", bwmethod = "cv.aic", gradients = TRUE, data = data_enlarged)
library(np)
bw <- npreg(Accident~AADT, regtype = "ll", bwmethod = "cv.aic", gradients = TRUE, data = data_enlarged)
summary(bw)
library(np)
model.np <- npreg(Accident~AADT, regtype = "ll", bwmethod = "cv.aic", gradients = TRUE, data = data_enlarged)
summary(model.np)
library(np)
model.np <- npreg(Accident~AADT, regtype = "ll", bwmethod = "cv.aic", gradients = TRUE, data = data_enlarged)
summary(model.np)
lines(data_enlarged$AADT,fitted(model.np))
library(np)
model.np <- npreg(Accident~AADT, regtype = "ll", bwmethod = "cv.aic", gradients = TRUE, data = data_enlarged)
summary(model.np)
lines(data_enlarged$AADT,fitted(model.np),lty = 1)
library(np)
model.np <- npreg(Accident~AADT, regtype = "ll", bwmethod = "cv.aic", gradients = TRUE, data = data_enlarged)
summary(model.np)
plot(data_enlarged$AADT,fitted(model.np),type = "l")
library(np)
model.np <- npreg(Accident~AADT, regtype = "ll", bwmethod = "cv.aic", gradients = TRUE, data = data_enlarged)
summary(model.np)
plot(data_enlarged$AADT,fitted(model.np))
model.poisson <- glm(Accident ~ AADT, family="poisson", data=data_enlarged)
model.poisson <- glm(Accident ~ AADT, family="poisson", data=data_enlarged)
summary(model.poisson)
model.poisson <- glm(Accident ~ AADT, family="poisson", data=data_enlarged)
summary(model.poisson)
plot(data_enlarged$AADT,fitted(model.np))
model.poisson <- glm(Accident ~ AADT, family="poisson", data=data_enlarged)
summary(model.poisson)
plot(data_enlarged$AADT,fitted(model.poisson))
model.poisson <- glm(Accident ~ I(AADT^6) , family="poisson", data=data_enlarged)
summary(model.poisson)
plot(data_enlarged$AADT,fitted(model.poisson))
model.poisson <- glm(Accident ~ I(AADT^3) , family="poisson", data=data_enlarged)
summary(model.poisson)
plot(data_enlarged$AADT,fitted(model.poisson))
model.poisson <- glm(Accident ~ I(AADT^6) , family="poisson", data=data_enlarged)
summary(model.poisson)
plot(data_enlarged$AADT,fitted(model.poisson))
model.poisson <- glm(Accident ~ I(AADT^4) , family="poisson", data=data_enlarged)
summary(model.poisson)
plot(data_enlarged$AADT,fitted(model.poisson))
model.poisson <- glm(Accident ~ I(AADT^4) + I(AADT^6) , family="poisson", data=data_enlarged)
summary(model.poisson)
plot(data_enlarged$AADT,fitted(model.poisson))
model.poisson <- glm(Accident ~ poly(AADT,6) , family="poisson", data=data_enlarged)
summary(model.poisson)
plot(data_enlarged$AADT,fitted(model.poisson))
library(MASS)
model.nb <- glm.nb(Accident ~ poly(AADT,6) , family="poisson", data=data_enlarged)
library(MASS)
model.nb <- glm.nb(Accident ~ poly(AADT,6) , data=data_enlarged)
summary(model.nb)
plot(data_enlarged$AADT,fitted(model.poisson))
library(MASS)
model.nb <- glm.nb(Accident ~ poly(AADT,6) , data=data_enlarged)
summary(model.nb)
plot(data_enlarged$AADT,fitted(model.nb))
install.packages("neuralnet")
library(neuralnet)
library(neuralnet)
fit <- neuralnet(Accident ~ poly(AADT,6),
data = data_enlarged,
hidden = 1,
err.fct = function(x, y) { -(-x+y*log(x))},
act.fct = "logistic",
linear.output = TRUE)
library(neuralnet)
fit <- neuralnet(Accident ~ poly(AADT,6),
data = data_enlarged,
hidden = 6,
err.fct = function(x, y) { -(-x+y*log(x))},
act.fct = "logistic",
linear.output = TRUE)
library(MASS)
model.nb <- glm.nb(Accident ~ AADT , data=data_enlarged)
summary(model.nb)
plot(data_enlarged$AADT,fitted(model.nb))
library(MASS)
model.nb <- glm.nb(Accident ~ poly(AADT,6) , data=data_enlarged)
summary(model.nb)
plot(data_enlarged$AADT,fitted(model.nb))
library(neuralnet)
fit <- neuralnet(Accident ~ AADT,
data = data_enlarged,
hidden = 6,
err.fct = function(x, y) { -(-x+y*log(x))},
act.fct = "logistic",
linear.output = TRUE)
library(neuralnet)
fit <- neuralnet(Accident ~ AADT,
data = data_enlarged,
hidden = 1,
err.fct = function(x, y) { -(-x+y*log(x))},
act.fct = "logistic",
linear.output = TRUE)
library(neuralnet)
fit <- neuralnet(Accident ~ AADT,
data = data_enlarged,
linear.output = TRUE)
library(neuralnet)
model.nnet <- neuralnet(Accident ~ AADT,
data = data_enlarged,
linear.output = TRUE)
library(neuralnet)
model.nnet <- neuralnet(Accident ~ AADT,
data = data_enlarged,
linear.output = TRUE)
summary(model.nnet)
library(neuralnet)
model.nnet <- neuralnet(Accident ~ AADT,
data = data_enlarged,
linear.output = TRUE)
summary(model.nnet)
plot(data_enlarged$AADT,fitted(model.nnet))
library(neuralnet)
model.nnet <- neuralnet(Accident ~ AADT,
data = data_enlarged,
linear.output = TRUE)
summary(model.nnet)
plot(data_enlarged$AADT,round(fitted(model.nnet)))
library(neuralnet)
model.nnet <- neuralnet(Accident ~ AADT,
data = data_enlarged,
linear.output = TRUE)
summary(model.nnet)
fitted(model.nnet)
library(neuralnet)
model.nnet <- neuralnet(Accident ~ AADT,
data = data_enlarged,
linear.output = TRUE)
predict(model.nnet)
library(neuralnet)
model.nnet <- neuralnet(Accident ~ AADT,
data = data_enlarged,
linear.output = TRUE)
predict(model.nnet,data_enlarged$AADT)
library(neuralnet)
model.nnet <- neuralnet(Accident ~ AADT,
data = data_enlarged,
linear.output = TRUE)
predict(model.nnet,data_enlarged)
summary(model.nnet)
fitted(model.nnet)
library(neuralnet)
model.nnet <- neuralnet(Accident ~ AADT,
data = data_enlarged,
linear.output = TRUE)
predict(model.nnet,data_enlarged)
summary(model.nnet)
fitted(model.nnet)
library(neuralnet)
model.nnet <- neuralnet(Accident ~ AADT,
hidden = 6
data = data_enlarged,
library(neuralnet)
model.nnet <- neuralnet(Accident ~ AADT,
hidden = 6,
data = data_enlarged,
linear.output = TRUE)
predict(model.nnet,data_enlarged)
summary(model.nnet)
fitted(model.nnet)
#Kernel Regression
library(np)
model.np <- npreg(Accident~AADT, regtype = "ll", bwmethod = "cv.aic", gradients = TRUE, data = data_enlarged)
summary(model.np)
plot(data_enlarged$AADT,fitted(model.np))
fitted(model.np)
model.poisson <- glm(Accident ~ poly(AADT,6) , family="poisson", data=data_enlarged)
summary(model.poisson)
plot(data_enlarged$AADT,fitted(model.poisson))
fitted(mmodel.poisson)
model.poisson <- glm(Accident ~ poly(AADT,6) , family="poisson", data=data_enlarged)
summary(model.poisson)
plot(data_enlarged$AADT,fitted(model.poisson))
fitted(/model.poisson)
model.poisson <- glm(Accident ~ poly(AADT,6) , family="poisson", data=data_enlarged)
summary(model.poisson)
plot(data_enlarged$AADT,fitted(model.poisson))
fitted(model.poisson)
library(MASS)
model.nb <- glm.nb(Accident ~ poly(AADT,6) , data=data_enlarged)
summary(model.nb)
plot(data_enlarged$AADT,fitted(model.nb))
fitted(model.nb)
pchisq(2 * (logLik(model.poisson) - logLik(model.n
b)), df = 1, lower.tail = FALSE)
pchisq(2 * (logLik(model.poisson) - logLik(model.nb)), df = 1, lower.tail = FALSE)
#Poisson regression
model.poisson <- glm(Accident ~ poly(AADT,6) , family="poisson", data=data_enlarged)
summary(model.poisson)
plot(data_enlarged$AADT,fitted(model.poisson))
fitted(model.poisson)
predict(model.poisson, data_enlarged, type = "link", se.fit=TRUE)
#Poisson regression
model.poisson <- glm(Accident ~ poly(AADT,6) , family="poisson", data=data_enlarged)
summary(model.poisson)
plot(data_enlarged$AADT,fitted(model.poisson))
fitted(model.poisson)
predict(model.poisson, data_enlarged, se.fit=TRUE)
#Poisson regression
model.poisson <- glm(Accident ~ poly(AADT,6) , family="poisson", data=data_enlarged)
summary(model.poisson)
plot(data_enlarged$AADT,fitted(model.poisson))
fitted(model.poisson)
# Negative binomial regression
library(MASS)
# Negative binomial regression
library(MASS)
model.nb <- glm.nb(Accident ~ poly(AADT,6) , data=data_enlarged)
summary(model.nb)
plot(data_enlarged$AADT,fitted(model.nb))
fitted(model.nb)
#Poisson regression
model.poisson <- glm(Accident ~ poly(AADT,6) , family="poisson", data=data_enlarged)
summary(model.poisson)
plot(data_enlarged$AADT,fitted(model.poisson))
fitted(model.poisson)
#Poisson regression
model.poisson <- glm(Accident ~ poly(AADT,6) , family="poisson", data=data_enlarged)
summary(model.poisson)
plot(data_enlarged$AADT,fitted(model.poisson))
fitted.poisson = fitted(model.poisson)
# Read excel data
library(readxl)
data = read_excel("C:/Users/RISHAV/Downloads/New Microsoft Excel Worksheet (3).xlsx")
data_filtered = subset(data, select = c("Accident","AADT"))
# accident column increased 10 folds
Accident = round(runif(100,min(data$Accident),max(data$Accident)))
Accident = sort(Accident)
# AADT coumn increased 10 folds
AADT = runif(100, min(data$AADT),max(data$AADT))
AADT = sort(AADT)
#synthesized large data
syn_data = as.matrix(cbind(Accident,AADT))
data_enlarged = rbind(data_filtered,syn_data)
data_enlarged
#Kernel Regression
library(np)
model.np <- npreg(Accident~AADT, regtype = "ll", bwmethod = "cv.aic", gradients = TRUE, data = data_enlarged)
summary(model.np)
plot(data_enlarged$AADT,fitted(model.np))
fitted(model.np)
#Poisson regression
model.poisson <- glm(Accident ~ poly(AADT,6) , family="poisson", data=data_enlarged)
summary(model.poisson)
plot(data_enlarged$AADT,fitted(model.poisson))
fitted.poisson = fitted(model.poisson)
# Negative binomial regression
library(MASS)
model.nb <- glm.nb(Accident ~ poly(AADT,6) , data=data_enlarged)
summary(model.nb)
plot(data_enlarged$AADT,fitted(model.nb))
fitted(model.nb)
pchisq(2 * (logLik(model.poisson) - logLik(model.nb)), df = 1, lower.tail = FALSE)
View(model.poisson)
View(model.poisson)
View(model.nb)
View(model.nb)
#Poisson regression
model.poisson <- glm(Accident ~ poly(AADT,6) , family="poisson", data=data_enlarged)
summary(model.poisson)
plot(data_enlarged$AADT,fitted(model.poisson))
fitted.poisson = data.frame.matrix(fitted(model.poisson))
#Poisson regression
model.poisson <- glm(Accident ~ poly(AADT,6) , family="poisson", data=data_enlarged)
summary(model.poisson)
plot(data_enlarged$AADT,fitted(model.poisson))
fitted.poisson = matrix(fitted(model.poisson))
fitted.poisson
#Poisson regression
model.poisson <- glm(Accident ~ poly(AADT,6) , family="poisson", data=data_enlarged)
summary(model.poisson)
plot(data_enlarged$AADT,fitted(model.poisson))
fitted.poisson = table(fitted(model.poisson))
fitted.poisson
#Poisson regression
model.poisson <- glm(Accident ~ poly(AADT,6) , family="poisson", data=data_enlarged)
summary(model.poisson)
plot(data_enlarged$AADT,fitted(model.poisson))
fitted.poisson = as.table(fitted(model.poisson))
fitted.poisson
#Poisson regression
model.poisson <- glm(Accident ~ poly(AADT,6) , family="poisson", data=data_enlarged)
summary(model.poisson)
plot(data_enlarged$AADT,fitted(model.poisson))
fitted.poisson = as.table(fitted(model.poisson))
as.data.framefitted.poisson
#Poisson regression
model.poisson <- glm(Accident ~ poly(AADT,6) , family="poisson", data=data_enlarged)
summary(model.poisson)
plot(data_enlarged$AADT,fitted(model.poisson))
fitted.poisson = as.table(fitted(model.poisson))
as.data.frame(fitted.poisson)
#Kernel Regression
library(np)
model.np <- npreg(Accident~AADT, regtype = "ll", bwmethod = "cv.aic", gradients = TRUE, data = data_enlarged)
summary(model.np)
plot(data_enlarged$AADT,fitted(model.np))
fitted.np = as.table(fitted(model.np))
as.data.frame(fitted.np)
# Negative binomial regression
library(MASS)
model.nb <- glm.nb(Accident ~ poly(AADT,6) , data=data_enlarged)
summary(model.nb)
plot(data_enlarged$AADT,fitted(model.nb))
fitted.nb = as.table(fitted(model.nb))
as.data.frame(fitted.nb)
pchisq(2 * (logLik(model.poisson) - logLik(model.nb)), df = 1, lower.tail = FALSE)
shiny::runApp('r work/My_first_shiny_app')
